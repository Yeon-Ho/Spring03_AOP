<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="man" class="test02.Man" />
	<bean id="woman" class="test02.Woman" />
	<!-- advice -->
	<bean id="myAdvice" class="test02.MyAdvice" />
	
	<!-- proxy 객체 생성 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>	
		
	<!-- advisor : advice + pointCut -->
	<bean id="myAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor" >
		<property name="advice" ref="myAdvice"/>
		
		<!-- 포인트컷 표현식
			"*" : 모든값을 의미
			".." : 0개이상 을 의미
			execution([접근제어자]  리턴타입  [클래스풀네임].메소드이름패턴(파라미터패턴))
		 -->
		
		<!-- 
			1.execution(public * test02.*.*(..))
			   test02 패키지의 모든 클래스 적용
				but!  test02의 하위패키지에 속한 클래스는 적용 X
				ex) test02.test.play 형태라면 play클래스는 적용되지 않음
			
			2.execution(public * test02..*.*(..))
			   test02패키지 및 하위의 모든 패키지의 클래스에 적용
			    ex) test02.test.play 형태에서 play클래스도 적용
		 -->
	
		<!-- execution(public ,* , *()) 인자값이 없는 메소드 -->
		<property name="expression" value="execution(public * test02.* .*(..))" />
		
	</bean>
	
</beans>
